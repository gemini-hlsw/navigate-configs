name: CI

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm codegen --check
      - run: pnpm build
      - run: pnpm lint
      - run: pnpm test

  build-docker:
    runs-on: ubuntu-latest
    env:
      REGISTRY_USERNAME: 'nlsoftware'
      REGISTRY_IMAGE: nlsoftware/navigate-configs

    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Set version
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: pnpm pkg set version="${VERSION:11}_$(date +'%Y%m%d')"
        env:
          VERSION: ${{ github.ref }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          # Only push on releases
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Smoke test
        run: |
          echo "Smoke test for version ${CONFIGS_VERSION}"
          docker compose -f .github/docker-compose.yml up -d --no-build --wait

          ./tasks/healthcheck.js

          echo "Smoke test successful!"
          docker compose -f .github/docker-compose.yml down
        env:
          CONFIGS_VERSION: ${{ steps.meta.outputs.version }}
          DB_USER: jimmy
          DB_PASS: banana
          DB_NAME: configs
