// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  pk   Int    @id @default(autoincrement())
  name String
}

model Configuration {
  pk               Int         @id @default(autoincrement())
  site             SiteType    @default(GN)
  selectedTarget   Int?
  selectedOiTarget Int?
  selectedP1Target Int?
  selectedP2Target Int?
  oiGuidingType    GuidingType
  p1GuidingType    GuidingType
  p2GuidingType    GuidingType
  obsTitle         String?
  obsId            String?
  obsInstrument    String?
  obsSubtitle      String?
}

enum SiteType {
  GN
  GS
}

enum GuidingType {
  NORMAL
}

model Target {
  pk        Int        @id @default(autoincrement())
  id        String?
  name      String     @default("Test")
  coord1    Float // RA or Az
  coord2    Float // Dec or El
  epoch     String     @default("J2000.000")
  type      TargetType @default(SCIENCE) // FIXED | SCIENCE | BLINDOFFSET | OIWFS | PWFS1 | PWFS2
  createdAt DateTime   @default(now())
}

enum TargetType {
  FIXED
  SCIENCE
  BLINDOFFSET
  OIWFS
  PWFS1
  PWFS2
}

model Instrument {
  pk          Int     @id @default(autoincrement())
  name        String
  iaa         Float   @default(0.0)
  issPort     Int
  focusOffset Float   @default(0.0)
  wfs         WfsType @default(NONE)
  originX     Float   @default(0.0)
  originY     Float   @default(0.0)
  ao          Boolean @default(false)
  extraParams Json
}

enum WfsType {
  NONE
  PWFS1
  PWFS2
  OIWFS
}

model Rotator {
  pk       Int          @id @default(autoincrement())
  angle    Float        @default(0.0)
  tracking TrackingType @default(TRACKING)
}

enum TrackingType {
  TRACKING
  FIXED
}

model SlewFlags {
  pk                       Int     @id @default(autoincrement())
  zeroChopThrow            Boolean
  zeroSourceOffset         Boolean
  zeroSourceDiffTrack      Boolean
  zeroMountOffset          Boolean
  zeroMountDiffTrack       Boolean
  shortcircuitTargetFilter Boolean
  shortcircuitMountFilter  Boolean
  resetPointing            Boolean
  stopGuide                Boolean
  zeroGuideOffset          Boolean
  zeroInstrumentOffset     Boolean
  autoparkPwfs1            Boolean
  autoparkPwfs2            Boolean
  autoparkOiwfs            Boolean
  autoparkGems             Boolean
  autoparkAowfs            Boolean
}
